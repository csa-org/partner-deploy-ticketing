name: build

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: build frontend
        run: ./scripts/build_frontend.sh

      - name: build datalayer
        run: ./scripts/build_datalayer.sh

      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./artifacts

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: mkdir artifacts
        run: mkdir artifacts

      - name: move artifacts
        run: mv ./*.tgz artifacts/

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile_frontend
          context: artifacts
          load: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ticketing-frontend:latest

      - uses: lacework/lw-scanner-action@v0.6.0
        name: Scan container images for vulnerabitilies using Lacework
        with:
          USE_POLICY: true
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/ticketing-frontend
          IMAGE_TAG: latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile_frontend
          context: artifacts
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ticketing-frontend:latest

  release:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          automatic_release_tag: latest
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.tgz
